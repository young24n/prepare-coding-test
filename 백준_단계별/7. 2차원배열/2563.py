# 색종이

# 가로, 세로의 크기가 각각 100인 정사각형 모양의 흰색 도화지가 주어진다.
# 이 도화지 위에 가로, 세로의 크기가 각각 10인 정사각형 모양의 검은색 색종이를 색종이의 변과 도화지의 변이 평행하도록 붙인다.
# 하나 또는 여러장을 붙인 검은색 종이 영역의 넓이를 구하여라
# ----
# 첫째 줄에 색종이의 수가 주어진다. 
# 둘째 줄부터 한 줄에 하나씩 색종이를 붙인 좌표가 주어진다.
# 색종이를 붙인 위치는 두 개의 자연수로 주어지는데 첫 번째 자연수는 색종이의 왼쪽 변과 도화지의 왼쪽 변 사이의 거리이고, 
# 두 번째 자연수는 색종이의 아래쪽 변과 도화지의 아래쪽 변 사이의 거리이다. 
# 색종이의 수는 100 이하이며, 색종이가 도화지 밖으로 나가는 경우는 없다.
# ----
# 복잡하게 말하고있긴하지만 이해하면 간단하다.
# 우선 흰 도화지를 100*100 크기의 2차원 배열로 생각한다.
# 그리고 둘째 줄부터 입력 되는 숫자는 검은색 종이를 100*100에 어디에 둘지 정하는 좌표이다.

# "첫 번째 자연수는 색종이의 왼쪽 변과 도화지의 왼쪽 변 사이의 거리이고"
# "두 번째 자연수는 색종이의 아래쪽 변과 도화지의 아래쪽 변 사이의 거리이다"

# 이 말은 검은색 종이 좌표가 왼쪽 아래가 기준이라는 것
# 검은색종이는 가로, 세로의 크기가 각각 10이라 했으니 좌표 기준으로 위로 10칸 오른쪽으로 10칸을 그어주면 검은색 종이의 영역이 된다.
# 여기서 그어 준다는 것은 도화지의 흰색을 0 검은색종이를 1로 저장하면 편할 것이다. 이러면 검은색 종이가 영역을 겹쳐도 1의 갯수만 구하면 넓이를 구하기 쉽다.
# "종이가 도화지 밖으로 나가는 경우는 없다" 라고 했으니 위, 오른쪽 10칸은 그었을때 도화지를 넘어가는 좌표는 주어지지 않을 것이라는 뜻   

# "검은색 색종이를 색종이의 변과 도화지의 변이 평행하도록 붙인다." 
# 이 말은 그냥 색종이를 붙일때 마구잡이(삐뚤삐뚤하게)로 붙여지는 것이 아닌 
# 색종이의 네 변(위, 아래, 왼쪽, 오른쪽)이 도화지의 네 변과 나란히(평행하게) 붙는다는 뜻 
# 걍 네모 모양으로 붙인다는걸 길게 말하는거임
#---
# 우선 도화지가 되는 100*100 배열을 0으로 초기화한다. 여기서 0은 흰 영역 1은 검은 영역이다.
# 그리고 첫번째 줄 입력값을 받는다, 해당 입력 값을 반복문으로 좌표들을 입력받는다.
# 좌표와 반복문을 이용해 X, Y 부터의 각각의 +10까지 전부 순회하며 1로 바꾼다. 이미 1인 경우 종이를 땐다는 규칙은 없으니 상관없다
# 입력이 모두 끝나면 100*100을 완전 탐색하여 1의 갯수를 구하고 출력한다.

import sys
input = lambda: sys.stdin.readline().rstrip()

# board = [[0] * 100] * 100 이렇게 하면 참조까지 복사해서 한 행을 변경할때 다른 행도 바꿔버림
whiteBoard = []
for _ in range(100):
    row = [0] * 100
    whiteBoard.append(row)

amount = int(input())
coordinates = []

for i in range(amount):
    coordinates.append(list(map(int, input().split(' '))))

for x, y in coordinates:
    for i in range(x, x+10):
        for j in range(y, y+10):
            whiteBoard[i][j] = 1

countBlack = 0

for row in whiteBoard:
    for i in row:
        if i == 1:
            countBlack += 1

print(countBlack) 