# 대지

# 임씨의 이름이 새겨진 옥구슬의 위치 N 개가 주어질 때에, 
# 임씨에게 돌아갈 대지의 넓이를 계산하는 프로그램을 작성하시오. 
# 단, 옥구슬의 위치는 2 차원 정수 좌표로 주어지고 옥구슬은 같은 위치에 여러 개가 발견될 수도 있으며,
# # x 축의 양의방향을 동쪽, y 축의 양의방향을 북쪽이라고 가정한다. 
# 예를 들어 위와 같이 (2, 1), (3, 2), (5, 2), (3, 4) 네 점에서 옥구슬을 발견하였다면,
# 임씨에게 돌아갈 대지는 (2, 1), (5, 1), (2, 4), (5, 4)를 네 꼭짓점으로 하는 직사각형이며,
# 넓이는 (5 - 2) × (4 - 1) = 9 가 된다. 

# 문제가 복잡해 보이지만 좌표(x, y)중 그림을 보다보면 가장 외각에 있는 것들 기준으로 직사각형을 만들어서 면적을 구하는 것이 보인다.
# 즉 모든 좌표 중 위치 상관 없이 x의 최대값과 최소값 y의 최소값과 최대값을 직사각형의 꼭지점으로 생각하면 된다.
# 당연히 구슬의 좌표 또한 최소 2개는 있어야 직사각형을 만들 수 있다. 이는 입력 예시에 표기되어있다.
# 그 이상의 좌표가 있어도 x,y의 최소/최대값을 빼면 전부 무시해도 된다.

# 좌표의 갯수 N을 입력 받아 좌표 x,y를 N 만큼 반복하여 입력받는다.
# 반복 중 각 좌표 x, y는 각각 x, y에 해당하는 리스트에 들어간다.
# 반복이 끝나면 내부함수 min, max로 x,y 리스트의 최대최소 값을 구한다. 
# 이후 면적을 구한다. 계산식은 문제에 작성된 다음과 같다. (maxX - minX) * (maxY - minY)

N = int(input())

xList = []
yList = []

for i in range(N):
    x,y = map(int, input().split())
    xList.append(x)
    yList.append(y)

print((max(xList) - min(xList)) * (max(yList) - min(yList)))