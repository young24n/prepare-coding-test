# 약수 구하기

# 두 개의 자연수 N과 K가 주어졌을 때, N의 약수들 중 K번째로 작은 수를 출력하는 프로그램을 작성하시오.
# 첫째 줄에 N과 K가 빈칸을 사이에 두고 주어진다. N은 1 이상 10,000 이하이다. K는 1 이상 N 이하이다.
# 첫째 줄에 N의 약수들 중 K번째로 작은 수를 출력한다. 
# 만일 N의 약수의 개수가 K개보다 적어서 K번째 약수가 존재하지 않을 경우에는 0을 출력하시오.

# 약수 대상 N과 그 약수 중에서 K번째로 작은 수를 입력 받는다.
# N을 range로 이용해서 반복문을 굴린다.
# 반복문 내부에서는 순차적으로 증가하는 i를 이용해서 N나눈다. 나머지가 0이라면 해당 i를 list에 저장한다.
# 약분을 순차적으로 진행하기에 해당 list에 K번째 인덱스에 접근하면된다.
# K번째 인덱스에 접근하기 전에 K가 list의 length 보다 크다면 0을 출력해준다.

N, K = map(int, input().split(' '))

factors = []

for i in range(1, N + 1): # 반복문은 0 ~ N-1 순으로 진행된다. 1 ~ N 까지 진행될 수 있도록 조정한다.
    if N % i == 0:
        factors.append(i)

if len(factors) < K:
    print('0')
else: 
    print(factors[K-1]) # 인덱스에 접근하는 것도 마찬가지 0이 시작지점이기에 -1 해줘야한다.