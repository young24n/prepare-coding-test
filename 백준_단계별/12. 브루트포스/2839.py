# 설탕 배달

# 문제
# 상근이는 요즘 설탕공장에서 설탕을 배달하고 있다. 상근이는 지금 사탕가게에 설탕을 정확하게 N킬로그램을 배달해야 한다. 설탕공장에서 만드는 설탕은 봉지에 담겨져 있다. 봉지는 3킬로그램 봉지와 5킬로그램 봉지가 있다.
# 상근이는 귀찮기 때문에, 최대한 적은 봉지를 들고 가려고 한다. 예를 들어, 18킬로그램 설탕을 배달해야 할 때, 3킬로그램 봉지 6개를 가져가도 되지만, 5킬로그램 3개와 3킬로그램 1개를 배달하면, 더 적은 개수의 봉지를 배달할 수 있다.
# 상근이가 설탕을 정확하게 N킬로그램 배달해야 할 때, 봉지 몇 개를 가져가면 되는지 그 수를 구하는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 N이 주어진다. (3 ≤ N ≤ 5000)

# 출력
# 상근이가 배달하는 봉지의 최소 개수를 출력한다. 만약, 정확하게 N킬로그램을 만들 수 없다면 -1을 출력한다.

# 문제의 요구사항은 쉽다. 3kg, 5kg 봉투를 이용해 가장 적은 수의 설탕 봉투를 배달할 수 있게하면된다.
# 부루트포스 문제이니 2중 반복문으로 3,5 모두 봉투 수를 순차적으로 증가시키면 될 것 같다.
# 가장 큰 수인 5를 먼저 증가 시키는 검증하는 방식으로 해야 봉투 수가 적어 질 것이다.
# 값이 딱 맞아 떨어지거나 N을 넘어버리면 결과를 출력하면된다.


N = int(input())

result = -1
# 5kg 봉투를 많이 사용하는 경우를 먼저 탐색하도록 하기
for threeBag in range((N // 3) + 1):
    for fiveBag in range((N // 5) + 1):
        # 현재 봉투 조합으로 만든 총 무게 계산
        total = fiveBag * 5 + threeBag * 3
        
        if total == N:
            result = fiveBag + threeBag # 봉투 수 저장 후 종료
            break
    if total == N: # 반복문에서 완전히 탈출
        break
    


print(result) # 모든 경우의 수 탐색후 값이 변경되지 않았다면 기존값 -1 출력
